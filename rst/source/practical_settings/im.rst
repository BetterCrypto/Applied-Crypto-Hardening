Instant Messaging Systems
=========================

.. role:: math(raw)
   :format: html latex
..

General server configuration recommendations
--------------------------------------------

For servers, we mostly recommend to apply what’s proposed by the
*Peter’s manifesto*\  [1]_.

In short:

require the use of TLS for both client-to-server and server-to-server
connections

prefer or require TLS cipher suites that enable forward secrecy

deploy certificates issued by well-known and widely-deployed
certification authorities (CAs)

The last point being out-of-scope for this section, we will only cover
the first two points.

ejabberd
--------

Tested with Versions
~~~~~~~~~~~~~~~~~~~~

Debian Wheezy 2.1.10-4+deb7u1

Settings
~~~~~~~~

ejabberd is one of the popular Jabber servers. In order to be compliant
with the manifesto, you should adapt your configuration [2]_:

Additional settings
~~~~~~~~~~~~~~~~~~~

Older versions of ejabberd (:math:` < ` 2.0.0) need to be patched [3]_
to be able to parse all of the certificates in the CA chain.

Newer versions of ejabberd now support specifying the cipher string in
the config file. See the commit message:
https://github.com/processone/ejabberd/commit/1dd94ac0d06822daa8c394ea2da20d91c8209124.
However, this change did not yet make it into the stable release at the
time of this writing.

References
~~~~~~~~~~

How to test
~~~~~~~~~~~

https://xmpp.net is a practical website to test Jabber server
configurations.

Chat privacy - Off-the-Record Messaging (OTR)
---------------------------------------------

The OTR protocol works on top of the Jabber protocol [4]_. It adds to
popular chat clients (Adium, Pidgin...) the following properties for
encrypted chats:

Authentication

Integrity

Confidentiality

Forward secrecy

It basically uses Diffie-Hellman, AES and SHA1. Communicating over an
insecure instant messaging network, OTR can be used for end to end
encryption.

There are no specific configurations required but the protocol itself is
worth to be mentioned.

Charybdis
---------

There are numerous implementations of IRC servers. In this section, we
choose *Charybdis* which serves as basis for *ircd-seven*\  [5]_,
developed and used by freenode. Freenode is actually the biggest IRC
network [6]_. *Charybdis* is part of the *Debian* & *Ubuntu*
distributions.

SILC
----

SILC [7]_ is instant messaging protocol publicly released in 2000. SILC
is a per-default secure chat protocol thanks to a generalized usage of
symmetric encryption. Keys are generated by the server meaning that if
compromised, communication could be compromised.

The protocol is not really popular anymore.

.. [1]
   https://github.com/stpeter/manifesto

.. [2]
   http://www.process-one.net/docs/ejabberd/guide_en.html

.. [3]
   http://hyperstruct.net/2007/06/20/installing-the-startcom-ssl-certificate-in-ejabberd/

.. [4]
   https://otr.cypherpunks.ca/Protocol-v3-4.0.0.html

.. [5]
   https://dev.freenode.net/redmine/projects/ircd-seven

.. [6]
   http://irc.netsplit.de/networks/top10.php

.. [7]
   http://www.silcnet.org/ and
   https://en.wikipedia.org/wiki/SILC_(protocol)
